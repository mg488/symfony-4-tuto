security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    encoders:
        # Symfony\Component\Security\Core\User\User: plaintext
        App\Entity\User: plaintext
    role_hierarchy:
        #ROLE_ADMIN:       ROLE_USER
        #ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]
            ## Un admin hérite des droits d'auteur et de modérateur
        ROLE_ADMIN:       [ROLE_AUTEUR, ROLE_MODERATEUR]
            ## On garde ce rôle superadmin, il nous resservira par la suite
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]
    providers:
        # in_memory: 
        #     memory:
        #         users:
        #             user: { password: userpass, roles: [ 'ROLE_USER' ] }
        #             admin: { password: adminpass, roles: [ 'ROLE_ADMIN' ] }
        #             mnd: { password: mndpass, roles: [ 'ROLE_AUTEUR' ] }
        main:
            entity: {class: App\Entity\User , property: username}

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
         # On crée un pare-feu uniquement pour le formulaire
        #1main_login:
            # Cette expression régulière permet de prendre /login (mais pas /login_check !)
            #2pattern:   ^/login$
            #3anonymous: true # On autorise alors les anonymes sur ce pare-feu
        main:
            pattern:  ^/
            anonymous: true #flase si t'active 1,2,3
            provider: main #nouveau fournisseur
            form_login:
                login_path: login
                check_path: login_check
                default_target_path: /advert 
            logout:
                path:       logout
                target:     login
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
